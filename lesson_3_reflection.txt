When would you want to use a remote repository rather than keeping all your work
local?

When I work with a team, and every person is working in something different, so at final every integrant of the team should have the final version. Using a remote repository is pretty easy to do it.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

Because you could choose which branch you want to pull and not always will be the same. And also you could work locally in wathever you need and make apush just when it's necesary.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Forks are made gitHub-to-gitHub nothing is copied to my PC and it will update when you make a push.
Clone means that you copy a repo from github onto your computer, this means that it will be locally stored.
Branches allow you to preserve the main code, make a copy and then you could work within that new branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

The benefit is that you can have a "backup" if something bad occurs to the remote repository.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?
 
I think it will be harder to put together all changes that a team work make into the same project, git makes that thing easier.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

When I making tests for example o when I'm experimenting with a new functionallity an I don't know if that really is going to work so I make sure that the actual project that is working will continue working correctly.
